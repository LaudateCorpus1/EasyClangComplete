name: build

on: [pull_request]

# if need master branch of UnitTesting
#  env:
#     UNITTESTING_TAG: master

jobs:
  linux:
    runs-on: ubuntu-20.04
    container: sublimetext/unittesting
    steps:
      - uses: actions/checkout@v1
      - name: Install prerequisites
        run: |
          apt-get update
          apt-get install cmake python3-pip -y
          pip3 install --upgrade pip pycodestyle pep257
          pip3 install --upgrade coverage==4.5.4 codecov
          pip3 install --upgrade mkdocs mkdocs-material
          curl -L -o bazelisk "https://github.com/bazelbuild/bazelisk/releases/download/v1.3.0/bazelisk-linux-amd64";
          chmod +x bazelisk && sudo mv bazelisk /usr/local/bin/bazel;
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 100
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 100
          which clang
      - run: sh -e /etc/init.d/xvfb start
      - run: curl -OL https://raw.githubusercontent.com/SublimeText/UnitTesting/master/sbin/github.sh
      - name: Run tests
        run: |
          which clang
          PATH="$HOME/.local/bin:$PATH"
          sh github.sh bootstrap
          sh github.sh install_package_control
          sh github.sh run_tests --coverage
      - run: |
          codecov
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install prerequisites
        run: |
          pip3 install --upgrade pip pycodestyle pep257
          pip3 install --upgrade coverage==4.5.4 codecov
          curl -L -o bazelisk "https://github.com/bazelbuild/bazelisk/releases/download/v1.3.0/bazelisk-linux-amd64";
          chmod +x bazelisk && sudo mv bazelisk /usr/local/bin/bazel;
      - run: curl -OL https://raw.githubusercontent.com/SublimeText/UnitTesting/master/sbin/github.sh
      - run: |
          which clang
          export PATH="$HOME/.local/bin:$PATH"
          sh github.sh bootstrap
          sh github.sh install_package_control
          sh github.sh run_tests --coverage
      - run: |
          codecov
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v1
      - uses: msys2/setup-msys2@v2
        with:
          install: make cmake mingw-w64-x86_64-clang
      - run: (new-object net.webclient).DownloadFile("https://raw.githubusercontent.com/SublimeText/UnitTesting/master/sbin/github.ps1","github.ps1")
      - run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
      - run: |
          ./github.ps1 "bootstrap" -verbose
          ./github.ps1 "install_package_control" -verbose
          ./github.ps1 "run_tests" -coverage -verbose
      - run: |
          codecov
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
